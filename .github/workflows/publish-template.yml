name: Publish CloudFormation Template

on:
  push:
    branches:
      - main
    paths:
      - 'templates/*.yaml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Upload template to S3
        run: |
          aws s3 cp templates/atmos-pro.yaml s3://${{ secrets.TEMPLATE_BUCKET }}/atmos-pro/atmos-pro.yaml \
            --content-type 'application/x-yaml' \
            --cache-control 'no-cache' \
            --acl public-read

      - name: Get template URL
        id: template-url
        run: |
          echo "url=https://${{ secrets.TEMPLATE_BUCKET }}.s3.amazonaws.com/atmos-pro/atmos-pro.yaml" >> $GITHUB_OUTPUT

      - name: Create CloudFormation Console URL
        id: console-url
        run: |
          TEMPLATE_URL="https://${{ secrets.TEMPLATE_BUCKET }}.s3.amazonaws.com/atmos-pro/atmos-pro.yaml"
          ENCODED_URL=$(echo -n "$TEMPLATE_URL" | jq -sRr @uri)
          echo "url=https://console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/create/review?templateURL=$ENCODED_URL" >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const templateUrl = '${{ steps.template-url.outputs.url }}';
            const consoleUrl = '${{ steps.console-url.outputs.url }}';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `CloudFormation template published successfully!\n\n` +
                    `## ðŸš€ Deploy Complete Infrastructure\n` +
                    `- Template URL: ${templateUrl}\n` +
                    `- Launch Stack: ${consoleUrl}\n\n` +
                    `This template deploys all Atmos Pro infrastructure in a single stack:\n` +
                    `- S3 bucket for Terraform state storage\n` +
                    `- KMS key for encryption\n` +
                    `- DynamoDB table for state locking\n` +
                    `- GitHub OIDC provider\n` +
                    `- GitHub Actions IAM role\n` +
                    `- All security policies and configurations`
            }); 